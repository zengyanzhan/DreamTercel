package com.yidu.stockControl.controller;

import java.io.IOException;
import java.sql.Date;
import java.util.HashMap;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.google.gson.Gson;
import com.yidu.parameters.domain.Fund;
import com.yidu.stockControl.domain.SecurityArapStock;
import com.yidu.stockControl.service.SecurityArapStockService;
import com.yidu.util.AllUtil;
import com.yidu.util.service.AutoBianService;

/**
 * 证券应收应付库存  控制器
 * @author 肖向恩
 *
 */
@Controller
public class SecurityArapStockController {
	// 编号的处理类
	@Autowired
	AutoBianService autoBianService;
	//创建gson
	Gson gson=new Gson();
	//证券应收应付库存  service
	@Autowired
	SecurityArapStockService securityArapStockService;
	@SuppressWarnings("unchecked")
	@ResponseBody
	@RequestMapping(value="/selectSecurityArapStock.action",produces="text/html;charset=UTF-8")
	public String selectSecurityArapStock(HttpServletResponse response,HttpServletRequest request,@ModelAttribute("SpringWeb")SecurityArapStock securityArapStock) throws Exception{
		HttpSession session=request.getSession(false);//得到一个会话
		if(session==null){
			session=request.getSession(true);
		}
		Fund fund=(Fund)session.getAttribute("fund");//得到基金实体类
		securityArapStock.setFundCode(fund.getFundCode());
		HashMap<String,Object> map=securityArapStockService.selectSecurityArapStock(securityArapStock);


		HashMap<String,Object> jsonMap=new HashMap<String,Object>();
		List <SecurityArapStock>list=(List<SecurityArapStock>) map.get("bondList");
		for (SecurityArapStock securityArapStocks:list) {
			String strStart=AllUtil.getStringDate(securityArapStocks.getBusinessDate());
			securityArapStocks.setStrStart(strStart);
		}
		Integer rows= (Integer) map.get("rowsTotal");
		jsonMap.put("total",rows);
		jsonMap.put("rows",list);
		return gson.toJson(jsonMap);	
	}

	@ResponseBody
	@RequestMapping(value="/deleteSecurityArapStockId.action",produces="text/html;charset=UTF-8")
	public String deleteSecurityArapStockId(HttpServletResponse response,HttpServletRequest request,@ModelAttribute("SpringWeb")SecurityArapStock securityArapStock) throws IOException{
		int i=securityArapStockService.deleteSecurityArapStockId(securityArapStock.getSecurityArapStockCode());
		if (i>0) {
			return "1";
		}else{
			return "0";
		}

	}
	@ResponseBody
	@RequestMapping(value="/insertSecurityArapStock.action",produces="text/html;charset=UTF-8")
	public String insertSecurityArapStock(HttpServletResponse response,HttpServletRequest request,@ModelAttribute("SpringWeb")SecurityArapStock securityArapStock)throws Exception{
		securityArapStock.setBusinessDate(AllUtil.getDate(securityArapStock.getStrStart()));
		int flag=securityArapStockService.insertSecurityArapStock(securityArapStock);
		if(flag!=0){
			return "增加成功";
		}else{
			return "增加失败";
		}
	}
	@ResponseBody
	@RequestMapping(value="/updateSecurityArapStock.action",produces="text/html;charset=UTF-8")
	public String updateSecurityArapStock(HttpServletResponse response,HttpServletRequest request,@ModelAttribute("SpringWeb")SecurityArapStock securityArapStock)throws Exception{
		securityArapStock.setBusinessDate(AllUtil.getDate(securityArapStock.getStrStart()));
		int updateSecurityArapStock = securityArapStockService.updateSecurityArapStock(securityArapStock);
		if (updateSecurityArapStock>0) {
			return "修改成功";
		}else{
			return "修改失败";
		}
	}
	/**
	 * 通过id查询证券应收应付账户
	 * @param response	响应对象
	 * @param request	请求对象
	 * @param CashAccount	现金账户对象
	 * @throws Exception	抛出异常
	 */
	@ResponseBody
	@RequestMapping(value="selectSecurityArapStockIds.action")
	public String selectSecurityArapStockIds(HttpServletResponse response,HttpServletRequest request,@ModelAttribute("SpringWeb")SecurityArapStock securityArapStock)throws Exception{

		securityArapStock=securityArapStockService.selectSecurityArapStockIds(securityArapStock.getSecurityArapStockCode());
		securityArapStock.setStrStart(AllUtil.getStringDate(securityArapStock.getBusinessDate()));
		return gson.toJson(securityArapStock);

	}
	/**
	 * 调用自动生成编号security_arap_stock_code
	 * @return security_arap_stock 表名 security_arap_stock 生成编号前缀
	 */
	@ResponseBody
	@RequestMapping(value="/autoSecurityArapStockBianhao",produces="text/html;charset=UTF-8")
	public String autoCashArapBianhao() throws Exception{
		return autoBianService.getAutoBianhao("security_arap_stock", "ZJYSYFKC", "security_arap_stock_code", "business_date", new Date(System.currentTimeMillis()));
	}

}
